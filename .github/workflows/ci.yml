# https://docs.github.com/en/actions
# https://docs.github.com/en/actions/learn-github-actions/workflow-syntax-for-github-actions

# https://github.com/silverstripe/silverstripe-travis-shared/blob/master/config/base.yml

name: tests

on:
  push:
  pull_request:
  # every day at midnight:
  schedule:
    - cron: '0 0 * * *'

jobs:
  tests:
    runs-on: ubuntu-20.04

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_HOST: 127.0.0.1
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: SS_mysite
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    strategy:
      # fail-fast: true
      matrix:
        include:
          - php: '7.3'
            behat_test: true
          - php: '7.4'
            phpunit_test: true

    name: PHP ${{ matrix.php }}${{ matrix.phpunit_test && ' - phpunit' || '' }}${{ matrix.behat_test && ' - behat' || '' }}

    steps:
      # disabling this because ran into dependency issues trying to install libapache2-mod-php
      # Should conditionally use this for non-behat jobs
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        if: ${{ matrix.behat_test != true }}
        with:
          php-version: ${{ matrix.php }}
          extensions: curl, dom, gd, intl, json, ldap, mbstring, mysql, tidy, xdebug, zip
          tools: composer:v2
          coverage: none

      - name: Checkout code
        uses: actions/checkout@v2
        # with:
        #   php-version: ${{ matrix.php }}

      # This is kind of slow at around 44 seconds, it's only because I was having
      # issues with libapache2-mod-php which is needed for behat
      # Ideally would use shivammathur/setup-php@v2 instead which is far faster
      # could possibly just use this installation method conditional on it being a behat job
      - name: Install PHP - Behat
        if: ${{ matrix.behat_test == true }}
        run: |
          # Make all php versions other than the current main version available
          sudo apt update && sudo sudo apt install -y software-properties-common
          sudo add-apt-repository -y ppa:ondrej/php
          sudo add-apt-repository -y ppa:ondrej/apache2
          sudo apt update
          sudo apt install libapache2-mod-php${{ matrix.php }} php${{ matrix.php }} php${{ matrix.php }}-cli php${{ matrix.php }}-curl  php${{ matrix.php }}-dom php${{ matrix.php }}-gd php${{ matrix.php }}-intl php${{ matrix.php }}-json php${{ matrix.php }}-ldap php${{ matrix.php }}-mbstring php${{ matrix.php }}-mysql php${{ matrix.php }}-tidy php${{ matrix.php }}-xdebug php${{ matrix.php }}-zip
          # This this verison of PHP instead of the default ubuntu php8.0 install
          sudo rm /etc/alternatives/php
          sudo ln -s /usr/bin/php${{ matrix.php }} /etc/alternatives/php
          # Test
          php -v

      # This only needs to be done if not using shivammathur/setup-php@v2
      - name: Install composer - Behat
        if: ${{ matrix.behat_test == true }}
        run: |
          php -r "copy('https://composer.github.io/installer.sig', 'installer.sig');"
          php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
          php -r "if (hash_file('sha384', 'composer-setup.php') === file_get_contents('installer.sig')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
          if [ -f composer-setup.php ]; then php composer-setup.php && rm composer-setup.php; fi
          rm installer.sig
          sudo mv composer.phar /usr/local/bin/composer

      # COMPORER_ROOT_VERSION - need to get access to the current branch in github actions
      #  - if [[ "$TRAVIS_BRANCH" =~ ^[1-9]$ ]] || [[ "$TRAVIS_BRANCH" =~ ^[1-9]\.[0-9]+$ ]]; then export COMPOSER_ROOT_VERSION="${TRAVIS_BRANCH}.x-dev"; elif [[ "$TRAVIS_BRANCH" =~ ^[1-9]\.[0-9]+\.[0-9]+ ]]; then export COMPOSER_ROOT_VERSION="${TRAVIS_BRANCH}"; else export COMPOSER_ROOT_VERSION="dev-${TRAVIS_BRANCH}"; fi
      # - echo "$COMPOSER_ROOT_VERSION"

      - name: Composer
        run: |
          composer require silverstripe/installer:^4 --no-update --prefer-dist
          composer require silverstripe/recipe-testing:^1 --no-update --prefer-dist
          composer update --prefer-dist --no-interaction --no-progress
          mkdir artifacts
          cp composer.json artifacts
          cp composer.lock artifacts

      - name: Create .env
        run: |
          cp .github/things/.env .env
          cat .env

      - name: dev/build flush=1
        run: |
          vendor/bin/sake dev/build flush=1

      - name: phpunit
        if: ${{ matrix.phpunit_test == true }}
        run: |
          vendor/bin/phpunit --verbose

      - name: Configure apache
        if: ${{ matrix.behat_test == true }}
        run: |
          # apache2 is installed and running by default in ubuntu
          # update dir.conf to use index.php as the primary index doc
          sudo cp .github/things/dir.conf /etc/apache2/mods-enabled/dir.conf
          # this script will create a 000-default.conf file with the pwd as the DocumentRoot
          # it will also create envvars which is used a bit later
          php .github/things/apache2.php
          sudo cp 000-default.conf /etc/apache2/sites-enabled/000-default.conf
          sudo a2enmod rewrite
          # run apache as 'runner:docker' instead of 'www-data:www-data'
          sudo cp envvars /etc/apache2/envvars
          sudo chmod 644 /etc/apache2/envvars
          sudo chown root:root /etc/apache2/envvars
          sudo systemctl restart apache2

      - name: behat
        if: ${{ matrix.behat_test == true }}
        run: |
          # this script will update behat.yml to work with headless chrome
          php .github/things/behat.php
          nohup sh -c "chromedriver --log-path=artifacts/chromedriver.log --log-level=INFO" > /dev/null 2>&1 &
          vendor/bin/behat octopus

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: artifacts
          path: artifacts
