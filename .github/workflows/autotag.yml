# auto tag patch releases on pull-request merge
# status of unit tests does not matter
# 

name: autotag

on:
  # tmp
  push:
  # https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows#pull_request
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  myaction:
    name: 'My action'
    runs-on: ubuntu-latest
    steps:

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: yaml

      - name: My step
        # if: github.event.action == 'closed' && github.event.pull_request.merged == true
        run: |
          # Auto tag a new patch release
          # Am running on main branch, normally would have a `1.0` like branch so would need to detect that via github.ref .replace '^refs/heads/' ''
          
          # show json associated with the event, can be parsed with jq()
          # cat $GITHUB_EVENT_PATH
          
          # need to wget rather that php file_get_contents as the latter is disallowed
          wget -O tags.json https://api.github.com/repos/${{ github.repository }}/tags
          cat << EOF > run.php
          <?php
          \$major = '1'; # TODO: read from ${{ github.ref }}
          \$arr = [];
          foreach (json_decode(file_get_contents('tags.json')) as \$o) {
            if (!preg_match('#^([0-9]+)\.([0-9]+)\.([0-9]+)\$#'), \$o->name, \$m) continue;
            list(\$z, \$a, \$b, \$c) = \$m;
            if (\$a != \$major) continue;
            \$arr[] = (float) "\$b.\$c";
          }
          if (count(\$arr) == 0) exit(0);
          sort(\$arr);
          \$v = \$arr[count(\$arr) - 1];
          echo sprintf('%s.%s', \$major, \$v + 0.1);
          EOF
          NEW_TAG=$(php run.php)
          
          echo "NEW_TAG is: $NEW_TAG"
          
          # Get latest patch tag
          
          # Increment it
          
          
          
