name: Tag patch release

on:
  # https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows#pull_request
  pull_request:
    types: [closed]
    branches:
      # TODO: should be #*.*# type of match - if not possible then check in first step else `exit 1`
      - main

jobs:
  myaction:
    if: github.event.action == 'closed' && github.event.pull_request.merged
    name: 'My action'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          # Use `fetch-depth: 0` so that `git tag` works as expected as well as changelog generation
          # This probably isn't as efficient as using the github API, though if framework (largest repo) work fine then just keep as is
          fetch-depth: 0

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'

      - name: Tag new release
        run: |
          # Calculate the next tag to release.  Will exit if invalid.
          # TODO: Am running on main branch, normally would have a `1.0` like branch so would need to detect that via github.ref .replace '^refs/heads/' ''
          MINOR_BRANCH=1.0
                              
          # Get the current patch number
          /usr/bin/git tag >> tags.txt
          cat << EOF > __run.php
          <?php
          \$arr = [];
          foreach (explode("\n", file_get_contents('tags.txt')) as \$tag) {
            if (!preg_match('#^([0-9]+)\.([0-9]+)\.([0-9]+)\$#', \$tag, \$m)) continue;
            list(\$z, \$a, \$b, \$c) = \$m;
            if ("\$a.\$b" != '$MINOR_BRANCH') continue;
            \$arr[] = (int) "\$c";
          }
          if (count(\$arr) == 0) exit(0);
          sort(\$arr);
          echo \$arr[count(\$arr) - 1];
          EOF
          CURR_PATCH_N=$(php __run.php)
          
          if [ "$CURR_PATCH_N" == "" ]; then echo "No existing semver tag found for minor branch $MINOR_BRANCH, exiting" && exit 0; fi
          NEXT_PATCH_N=$((CURR_PATCH_N+1))
          TAG="$MINOR_BRANCH.$NEXT_PATCH_N"
          
          # TODO: change main to MINOR_BRANCH
          CHANGELOG=$(git log --oneline --pretty=format:"* %s (%an) - %h" --no-merges $MINOR_BRANCH.$CURR_PATCH_N...main)
          # Change newline to \n string for json
          echo "$CHANGELOG" > __changelog.txt
          CHANGELOG=$(php -r 'echo str_replace("\n", "\\n", trim(file_get_contents("__changelog.txt")));')
          
          SHA=$(git rev-parse HEAD)   
          
          # POST new tag to GitHub API
          curl -s -X POST https://api.github.com/repos/${{ github.repository }}/git/refs \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d @- << EOF
          {
            "ref": "refs/tags/$TAG",
            "sha": "$SHA"
          }
          EOF
          
          # POST new release to GitHub API
          curl -s -X POST https://api.github.com/repos/${{ github.repository }}/releases \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d @- << EOF
          {
            "tag_name": "$TAG",
            "name": "$TAG",
            "body": "$CHANGELOG"
          }
          EOF          
