# auto tag patch releases on pull-request merge
# status of unit tests does not matter
# 

name: autotag

on:
  # tmp
  push:
  # https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows#pull_request
  pull_request:
    types: [closed]
    branches:
      # TODO: should be #*.*# type of match - if not possible then check in first step else `exit 1`
      - main

env:
  github_token: ${{ secrets.GITHUB_TOKEN }}

jobs:
  myaction:
    if: github.event.action == 'closed' && github.event.pull_request.merged
    name: 'My action'
    runs-on: ubuntu-latest
    #outputs:
    #  changelog: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
#       - name: Check if is pull-request merge event
#         run: |
#           if [ "${{ github.event.action }}" != "closed" ] || [ "${{ github.event.pull_request.merged }}" != "true" ]; then
#             echo "Not a pull-request merge event, existing"
#             exit 1
#           fi

      # Use `fetch-depth: 0` so that `git tag` works as expected
      # TODO: investigate instead authenticating with github API (need to authenticate or will go over rate limit) and pull .json from /tags endpoint
      # would need to switch from php to node
      # would probably then replace the laputansoft step with something custom in this file
      # i.e. https://www.npmjs.com/package/@actions/github
      # e.g. https://github.com/softprops/action-gh-release/blob/master/package.json
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: yaml

      - name: Generate tag to release (and message)
        id: generate-tag
        run: |
          # Calculate the next tag to release.  Will exit if invalid.
          # TODO: Am running on main branch, normally would have a `1.0` like branch so would need to detect that via github.ref .replace '^refs/heads/' ''
          MINOR_BRANCH=1.0
          
          # show json associated with the event, can be parsed with jq()
          # cat $GITHUB_EVENT_PATH
                    
          # Get the current patch number
          /usr/bin/git tag >> tags.txt
          cat << EOF > run.php
          <?php
          \$arr = [];
          foreach (explode("\n", file_get_contents('tags.txt')) as \$tag) {
            if (!preg_match('#^([0-9]+)\.([0-9]+)\.([0-9]+)\$#', \$tag, \$m)) continue;
            list(\$z, \$a, \$b, \$c) = \$m;
            if ("\$a.\$b" != '$MINOR_BRANCH') continue;
            \$arr[] = (int) "\$c";
          }
          if (count(\$arr) == 0) exit(0);
          sort(\$arr);
          echo \$arr[count(\$arr) - 1];
          EOF
          CURR_PATCH_N=$(php run.php)
          
          if [ "$CURR_PATCH_N" == "" ]; then echo "No existing semver tag found for minor branch $MINOR_BRANCH, exiting" && exit 0; fi
          NEXT_PATCH_N=$((CURR_PATCH_N+1))
          TAG="$MINOR_BRANCH.$NEXT_PATCH_N"
          echo "TAG is $TAG"
          echo "::set-output name=tag::${MINOR_BRANCH}.${NEXT_PATCH_N}"
          
          # TODO: change main to MINOR_BRANCH
          CHANGELOG=$(git log --oneline --pretty=format:"* %s (%an) - %h" --no-merges $MINOR_BRANCH.$CURR_PATCH_N...main)
          echo "CHANGELOG is $CHANGELOG"
          echo "::set-output name=changelog::${CHANGELOG}"

      - name: Bump version and push tag
        uses: laputansoft/github-tag-action@v4.6
        with:
          github_token: ${{ env.github_token }}
          tag: ${{ steps.generate-tag.outputs.tag }}
          
                    
          
          
