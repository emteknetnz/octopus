# auto tag patch releases on pull-request merge
# status of unit tests does not matter
# 

name: autotag

on:
  # tmp
  push:
  # https://docs.github.com/en/actions/learn-github-actions/events-that-trigger-workflows#pull_request
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  myaction:
    name: 'My action'
    runs-on: ubuntu-latest
    steps:

      # Use `fetch-depth: 0` so that `git tag` works as expected
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: yaml

      - name: My step
        # if: github.event.action == 'closed' && github.event.pull_request.merged == true
        run: |
          # Auto tag a new patch release
          # TODO: Am running on main branch, normally would have a `1.0` like branch so would need to detect that via github.ref .replace '^refs/heads/' ''
          MINOR_BRANCH=1.0
          
          # show json associated with the event, can be parsed with jq()
          # cat $GITHUB_EVENT_PATH
                    
          # Echo the current patch verison
          /usr/bin/git tag >> tags.txt
          cat << EOF > run.php
          <?php
          \$arr = [];
          foreach (explode("\n", file_get_contents('tags.txt')) as \$tag) {
            if (!preg_match('#^([0-9]+)\.([0-9]+)\.([0-9]+)\$#', \$tag, \$m)) continue;
            list(\$z, \$a, \$b, \$c) = \$m;
            if ("\$a.\$b" != '$MINOR_BRANCH') continue;
            \$arr[] = (int) "\$c";
          }
          if (count(\$arr) == 0) exit(0);
          sort(\$arr);
          echo \$arr[count(\$arr) - 1];
          EOF
          CURR_PATCH_N=$(php run.php)
          echo "CURR_PATCH_N is $CURR_PATCH_N"
          if [ "$CURR_PATH_N" == "" ]; then echo "No existing semver tag found for minor branch $MINOR_BRANCH, exiting" && exit 0; fi
          NEXT_PATCH_N=$((CURR_PATCH_N+1))
          echo "NEXT_PATCH_N is $NEXT_PATCH_N"
          
          #TMP
          MINOR_BRANCH=main
          
          git log --oneline --pretty=format:"* %s (%an) - %h" --no-merges $MINOR_BRANCH.$CURR_PATCH_N...$MINOR_BRANCH
                    
          
          
